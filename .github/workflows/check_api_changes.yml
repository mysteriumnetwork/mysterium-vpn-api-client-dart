name: Check OpenAPI Changes

on:
  schedule:
    - cron: "0 6-15 * * 1-5" # Runs every 2 hours from 8 AM to 6 PM Vilnius time (adjusted to UTC)
  workflow_dispatch: # Allows manual triggering

jobs:
  check-openapi-changes:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download OpenAPI Spec
        run: curl -o new_openapi.yaml ${{ vars.OPENAPI_SPEC }}

      - name: Calculate new hash
        id: calculate_new_hash
        run: |
          NEW_HASH=$(sha256sum new_openapi.yaml | awk '{ print $1 }')
          echo "NEW_HASH=$NEW_HASH" >> $GITHUB_ENV
          echo "new_hash=$NEW_HASH" >> $GITHUB_OUTPUT

      - name: Load old hash
        id: load_old_hash
        run: |
          if [ -f .openapi_hash ]; then
            OLD_HASH=$(cat .openapi_hash)
          else
            OLD_HASH=""
          fi
          echo "OLD_HASH=$OLD_HASH" >> $GITHUB_ENV
          echo "old_hash=$OLD_HASH" >> $GITHUB_OUTPUT

      - name: Compare hashes
        id: compare_hashes
        run: |
          if [ "${{ steps.calculate_new_hash.outputs.new_hash }}" != "${{ steps.load_old_hash.outputs.old_hash }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Save new hash
        if: steps.compare_hashes.outputs.changed == 'true'
        run: echo "${{ steps.calculate_new_hash.outputs.new_hash }}" > .openapi_hash

      - name: Commit and push new hash
        if: steps.compare_hashes.outputs.changed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .openapi_hash
          git diff --quiet && echo "No changes to commit" || git commit -m "Update .openapi_hash"
          git push

      - name: Trigger API Generation Workflow
        if: steps.compare_hashes.outputs.changed == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "generate-api-and-release.yml",
              ref: "main"
            })